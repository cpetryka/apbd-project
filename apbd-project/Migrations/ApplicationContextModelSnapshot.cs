// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd_project.Data;

#nullable disable

namespace apbd_project.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apbd_project.Model.BusinessClient", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrsNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClientId");

                    b.ToTable("businessClients");

                    b.HasData(
                        new
                        {
                            ClientId = 2,
                            CompanyName = "Firma XYZ",
                            KrsNumber = "9876543210"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Klonowa 2, 00-001 Warszawa",
                            Email = "client1@gmail.com",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Brzozowa 3, 00-002 Warszawa",
                            Email = "client2@gmail.com",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("SignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SoftwareProductId");

                    b.ToTable("contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Price = 10000m,
                            SignedDate = new DateTime(2024, 6, 28, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(1326),
                            SoftwareProductId = 1,
                            StartDate = new DateTime(2024, 6, 28, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(1313)
                        });
                });

            modelBuilder.Entity("apbd_project.Model.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 15,
                            EndDate = new DateTime(2024, 7, 5, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(593),
                            Name = "Some discount",
                            Offer = "Some offer",
                            StartDate = new DateTime(2024, 6, 28, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(534)
                        });
                });

            modelBuilder.Entity("apbd_project.Model.IndividualClient", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("individualClients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            IsActive = true,
                            Name = "Jan",
                            Pesel = "12345678901",
                            Surname = "Kowalski"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.OneTimePurchase", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SupportEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractId");

                    b.ToTable("oneTimePurchase");

                    b.HasData(
                        new
                        {
                            ContractId = 1,
                            EndDate = new DateTime(2024, 7, 12, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(1380),
                            SupportEndDate = new DateTime(2025, 6, 28, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(1391),
                            Version = "1.0"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10000m,
                            ContractId = 1,
                            PaymentDate = new DateTime(2024, 6, 28, 8, 24, 8, 995, DateTimeKind.Local).AddTicks(1711)
                        });
                });

            modelBuilder.Entity("apbd_project.Model.SoftwareProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("softwareProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Finance",
                            Description = "Some description",
                            Name = "Software product 1",
                            Type = "Subscription",
                            Version = "1.0"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Education",
                            Description = "Description 2",
                            Name = "Product 2",
                            Type = "One-time purchase",
                            Version = "2.0"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HashedPassword = "$2a$11$WxeIQbfKhbGh4GKO6dYwzeQUISZKv36mHEo1yXdRlNfBF7QyU8asy",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            HashedPassword = "$2a$11$IoM9kEzrs53xTBAslNrM2ek3leKViw31r1x2ezK89MHfX838xzyde",
                            Role = "user",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("apbd_project.Model.BusinessClient", b =>
                {
                    b.HasOne("apbd_project.Model.Client", "Client")
                        .WithOne("BusinessClient")
                        .HasForeignKey("apbd_project.Model.BusinessClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("apbd_project.Model.Contract", b =>
                {
                    b.HasOne("apbd_project.Model.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_project.Model.SoftwareProduct", "SoftwareProduct")
                        .WithMany()
                        .HasForeignKey("SoftwareProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SoftwareProduct");
                });

            modelBuilder.Entity("apbd_project.Model.IndividualClient", b =>
                {
                    b.HasOne("apbd_project.Model.Client", "Client")
                        .WithOne("IndividualClient")
                        .HasForeignKey("apbd_project.Model.IndividualClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("apbd_project.Model.OneTimePurchase", b =>
                {
                    b.HasOne("apbd_project.Model.Contract", "Contract")
                        .WithOne("OneTimePurchase")
                        .HasForeignKey("apbd_project.Model.OneTimePurchase", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("apbd_project.Model.Payment", b =>
                {
                    b.HasOne("apbd_project.Model.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("apbd_project.Model.Client", b =>
                {
                    b.Navigation("BusinessClient");

                    b.Navigation("Contracts");

                    b.Navigation("IndividualClient");
                });

            modelBuilder.Entity("apbd_project.Model.Contract", b =>
                {
                    b.Navigation("OneTimePurchase");
                });
#pragma warning restore 612, 618
        }
    }
}
